name: Staging Deploy Workflow
on:
  push:
    branches:
      - 'master'
      
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
      customer:
        description: 'Customer to deploy'
        required: true
        type: choice
        options:
          - sycamore-mdr-auto-ps
          - sycamore-mdr-malta-staging-ps
          - sycamore-mdr-miami-staging-ps
          - sycamore-mdr-missouri-staging-ps

permissions:
  id-token: write
  contents: write

env:
  organization: "sycamore"
  repository: "mdr"
  #tag: "${{ github.event.inputs.branch }}"
  remote_branch_name: "${{ github.actor }}-${{ github.run_id }}"
  branch_name: "${{ github.ref_name }}"
  updated_tag: "${{ github.ref_name }}"
  tag: "${{ github.event.inputs.tag }}"
  customer: "${{ github.event.inputs.customer }}"

jobs:
  runtimeInfo: 
    name: Print Runtime Environment details
    runs-on: self-hosted
    steps:
      - name: Show Runtime Env Values
        run: |
          echo "Running Staging Release workflow with the following Env Values:"
          echo ""
          echo "BRANCH_ENV_MAP: ${{ vars.BRANCH_ENV_MAP }}"
          echo '${{ vars.BRANCH_ENV_MAP }}' | jq -r
          echo "Deploying Branch: ${{ env.branch_name }}"
          echo "organization: ${{ env.organization }}"
          echo "repository: ${{ env.repository }}"
          echo "tag: ${{ env.tag }}"
          echo "full_env_name: ${{ env.full_env_name }}"
          echo "remote_branch_name: ${{ env.remote_branch_name }}"
          echo "region: ${{ env.region }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "GITHUB_WORKFLOW:$GITHUB_WORKFLOW"
          echo "GITHUB_EVENT_NAME:$GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH:$GITHUB_EVENT_PATH"
          echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
          echo "GITHUB_SHA:$GITHUB_SHA"
          echo "GITHUB_REF:$GITHUB_REF"
          echo "GITHUB_HEAD_REF:$GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF:$GITHUB_BASE_REF"
          echo "GITHUB_REF_EXTRACT: ${GITHUB_REF##*/}"
          echo "EXTRACT_GITHUB_REF_HEADS=$(echo ${GITHUB_REF#refs/heads/} | tr -d '.')"
  build:
    name: Build Docker Images
    runs-on: self-hosted
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.branch_name }}

      - name: Print Env details
        run: |
            # Install jq for parsing JSON
            sudo apt-get update && sudo apt-get install -y jq    
